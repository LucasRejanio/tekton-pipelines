apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-image
  namespace: tekton-pipelines
spec:
  params:
    - name: destination-branch
      description: Repository destination branch.
      type: string

  workspaces:
    - name: repository

  steps:
    - image: 142401413602.dkr.ecr.sa-east-1.amazonaws.com/ecr-image-default-aws-cli:build
      name: verify-repository
      script: |
        #!/bin/bash
        cd /workspace/repository && source .env

        echo "----------- Validando dados do metadata -----------"
        #Replace APPLICATION_NAME
        if [ -z "${APPLICATION_NAME}" ]; then
            echo "Não encontrado a váriavel APPLICATION_NAME"
            exit 1
        else
            echo "Metadata validado."
            export APPLICATION_NAME=$(echo $APPLICATION_NAME | sed 's/_/-/g')
        fi

        echo "----------- Buscando repositório no ECR -----------"
        AWS_REGION=us-west-1
        AWS_ACCOUNT=876897421480
        ECR_REPO_NAME=ecr-$APPLICATION_NAME

        aws ecr describe-repositories --region $AWS_REGION --no-cli-pager --query "repositories[?repositoryName==\`$ECR_REPO_NAME\`][repositoryName]" --output text | grep -q "$ECR_REPO_NAME"

        if [ $? -eq 0 ]
        then
            echo "Repositório ECR encontrado com sucesso!"
        else
            echo "Repositório ECR não encontrado.."
            echo "Criando repositório $ECR_REPO_NAME"
            aws ecr create-repository --region $AWS_REGION --repository-name ${ECR_REPO_NAME} --no-cli-pager && exit 0
            [ $? -ne 0 ] && echo "Erro ao criar o repositório $ECR_REPO_NAME" && exit
        fi

    - image: alpine
      securityContext:
        privileged: true
      name: build-and-push-ecr
      script: |
        printf "Instalando dependencias..\n"
        apk add bash buildah podman ca-certificates

        #!/bin/bash
        cd /workspace/repository && source .env


        echo "----------- Validando ambiente -----------"
        BITBUCKET_BRANCH="$(params.destination-branch)"
        
        case ${BITBUCKET_BRANCH} in
          develop)
              export AMBIENTE=dev
              export ENV=development
              echo "Identificado ambiente de Desenvolvimento"
          ;;
          staging)
              export AMBIENTE=stg
              export ENV=staging
              echo "Identificado ambiente de Staging"
          ;;
          master|main)
              export AMBIENTE=prd
              export ENV=production
              echo "Identificado ambiente de Produção"
          ;;
          *)
              echo "Ambiente não identificado"
              exit 1
          ;;
        esac

        echo "----------- Validando dados do metadata -----------"
        #Replace APPLICATION_NAME
        if [ -z "${APPLICATION_NAME}" ]; then
            echo "Não encontrado a váriavel APPLICATION_NAME"
            exit 1
        else
            echo "Metadata validado."
            export APPLICATION_NAME=$(echo $APPLICATION_NAME | sed 's/_/-/g')
        fi

        echo "----------- Gerando imagem da aplicação -----------"
        AWS_REGION=us-west-1
        AWS_ACCOUNT=876897421480
        ECR_REPO_NAME=ecr-$APPLICATION_NAME

        APP_ECR_URI=$AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME
        buildah bud --format=docker -f Dockerfile -t $APP_ECR_URI:$AMBIENTE .

        if [ $? -eq 0 ]
        then
            echo "Imagem da aplicacao gerada com sucesso"
        else
            echo "Falha ao gerar imagem da aplicação"
            send_metric_to_dynamo "FAIL" "DockerBuild"
            exit 1
        fi

        echo "----------- Realizando upload da imagem para o ECR -----------"
        buildah images
        buildah push $APP_ECR_URI:$AMBIENTE
        if [ $? -eq 0 ]
        then
            echo "Upload da Imagem finalizada com sucesso"
            exit 0
        else
            echo "Falha ao realizar o upload da imagem"
            exit 1
        fi

